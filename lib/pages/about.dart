import 'package:cross_website/components/home_page/footer_block.dart';
import 'package:cross_website/constants/app_colors.dart';
import 'package:cross_website/constants/image_constant.dart';
import 'package:jaspr/jaspr.dart';

@client
class About extends StatelessComponent {
  const About({super.key});

  @override
  Iterable<Component> build(BuildContext context) sync* {
    yield section(
        styles: Styles(
            width: 100.vw,
            height: 100.percent,
            alignItems: AlignItems.center,
            color: AppColors.backgroundTheme),
        [
          div(
              styles: Styles(
                  display: Display.flex,
                  flexDirection: FlexDirection.column,
                  alignItems: AlignItems.start),
              [
                h1(
                    styles: Styles(color: AppColors.textBlack),
                    [text('Ch√∫ng t√¥i l√† ai?')]),
                p(styles: Styles(width: 95.vw, color: AppColors.textBlack), [
                  text(
                      'GMO-Z.com RUNSYSTEM, ti·ªÅn th√¢n l√† C√¥ng ty RUNSYSTEM, ho·∫°t ƒë·ªông trong ng√†nh ph√°t tri·ªÉn ph·∫ßn m·ªÅm, cung c·∫•p c√°c gi·∫£i ph√°p v√† d·ªãch v·ª• CNTT cho th·ªã tr∆∞·ªùng Vi·ªát Nam v√† Nh·∫≠t B·∫£n. V·ªõi ph∆∞∆°ng ch√¢m ‚ÄúCh√∫ng t√¥i l√†m vi·ªác v√¨ n·ª• c∆∞·ªùi c·ªßa b·∫°n‚Äù, ch√∫ng t√¥i lu√¥n c·ªë g·∫Øng h·∫øt m√¨nh ƒë·ªÉ c·∫£i thi·ªán m√¥i tr∆∞·ªùng l√†m vi·ªác, c√¥ng ngh·ªá v√† quy tr√¨nh nh·∫±m t·ªëi ƒëa h√≥a nƒÉng su·∫•t, cung c·∫•p c√°c s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao ƒë·∫°t ti√™u chu·∫©n to√†n c·∫ßu, mang l·∫°i gi√° tr·ªã l·ªõn cho kh√°ch h√†ng v√† c√°c th√†nh vi√™n c·ªßa GMO-Z.com RUNSYSTEM.')
                ]),
              ]),
          img(
              styles: Styles(width: 100.vw, height: 80.percent),
              src: Images.crossTeambuilding),
          GoalComponent(
              icon: 'üèÜ',
              title: '∆Ø·ªõc m∆°',
              description: 'Tr·ªü th√†nh s·ªë 1 trong ng√†nh c√¥ng nghi·ªáp Internet'),
          GoalComponent(
              icon: 'üí°',
              title: 'S·ª© m·ªánh',
              description:
                  'Cung c·∫•p c√°c gi·∫£i ph√°p v√† d·ªãch v·ª• CNTT ch·∫•t l∆∞·ª£ng cao, ƒë√°p ·ª©ng nhu c·∫ßu c·ªßa kh√°ch h√†ng v√† th·ªã tr∆∞·ªùng.'),
          GoalComponent(
              icon: 'ü§ù',
              title: 'Tri·∫øt l√Ω',
              description:
                  'Mang ƒë·∫øn tr·∫£i nghi·ªám Internet phong ph√∫, ki·∫øn t·∫°o ra c√°c n·ªÅn vƒÉn h√≥a, ng√†nh c√¥ng ngh·ªá s·ªë m·ªõi v√† c·ªëng hi·∫øn cho x√£ h·ªôi.'),
          h2([text('Gi√° tr·ªã c·ªët l√µi')]),
          KeyValueComponent(
              title: 'Honest',
              description:
                  'Lu√¥n ƒë·ªëi x·ª≠ ch√¢n th√†nh v·ªõi ƒë·ªìng nghi·ªáp v√† kh√°ch h√†ng'),
          KeyValueComponent(
              title: 'Accountable',
              description:
                  'Lu√¥n l√†m vi·ªác v·ªõi tinh th·∫ßn tr√°ch nhi·ªám cao, th·ª±c hi·ªán ƒë√∫ng cam k·∫øt v·ªõi kh√°ch h√†ng'),
          KeyValueComponent(
              title: 'Passionate',
              description:
                  'Nhi·ªát huy·∫øt v·ªõi ∆∞·ªõc m∆° ƒë·∫°t m·ª•c ti√™u tr·ªü th√†nh No.1 trong lƒ©nh v·ª±c c·ªßa m√¨nh'),
          KeyValueComponent(
              title: 'Professional',
              description:
                  'H·ªçc h·ªèi v√† c·∫£i ti·∫øn li√™n t·ª•c, h∆∞·ªõng t·ªõi m·ªôt doanh nghi·ªáp to√†n c·∫ßu, ƒë∆∞·ª£c kh√°ch h√†ng ƒë√°nh gi√° cao'),
          FooterBlock(),
        ]);
  }

  // @css
  // static final styles = [];
}

class GoalComponent extends StatelessComponent {
  final String icon;
  final String title;
  final String description;
  const GoalComponent(
      {required this.icon,
      required this.title,
      required this.description,
      super.key});

  @override
  Iterable<Component> build(BuildContext context) sync* {
    yield div(
        styles: Styles(
            display: Display.flex,
            margin: Spacing.only(top: 1.rem),
            flexDirection: FlexDirection.column,
            alignItems: AlignItems.start),
        [
          h2(classes: 'icon', [
            text(icon),
          ]),
          h2(
              classes: 'title',
              styles: Styles(color: AppColors.textBlack),
              [text(title)]),
          p(
              classes: 'description',
              styles: Styles(width: 95.vw, color: AppColors.textBlack),
              [text(description)]),
        ]);
  }

  @css
  static final styles = [
    css('.icon', [
      css('&').styles(
        padding: Spacing.all(0.px),
        margin: Spacing.all(0.px),
        fontSize: 30.px,
      ),
    ]),
    css('.title', [
      css('&').styles(
        padding: Spacing.all(0.px),
        margin: Spacing.only(bottom: 0.px),
      ),
    ]),
    css('.description', [
      css('&').styles(
        padding: Spacing.all(0.px),
        margin: Spacing.only(bottom: 0.px),
      ),
    ]),
  ];
}

class KeyValueComponent extends StatelessComponent {
  final String title;
  final String description;
  const KeyValueComponent(
      {required this.title, required this.description, super.key});

  @override
  Iterable<Component> build(BuildContext context) sync* {
    yield div(
        styles: Styles(
            display: Display.flex,
            margin: Spacing.only(top: 1.rem),
            flexDirection: FlexDirection.column,
            alignItems: AlignItems.start),
        [
          h2(
              classes: 'title',
              styles: Styles(color: AppColors.textBlack),
              [text(title)]),
          p(
              classes: 'description',
              styles: Styles(width: 95.vw, color: AppColors.textBlack),
              [text(description)]),
        ]);
  }

  @css
  static final styles = [
    css('.icon', [
      css('&').styles(
        padding: Spacing.all(0.px),
        margin: Spacing.all(0.px),
        fontSize: 30.px,
      ),
    ]),
    css('.title', [
      css('&').styles(
        padding: Spacing.all(0.px),
        margin: Spacing.only(bottom: 0.px),
      ),
    ]),
    css('.description', [
      css('&').styles(
        padding: Spacing.all(0.px),
        margin: Spacing.only(bottom: 0.px),
      ),
    ]),
  ];
}
